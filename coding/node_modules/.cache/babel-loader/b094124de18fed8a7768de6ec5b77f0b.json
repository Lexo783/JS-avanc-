{"ast":null,"code":"var _jsxFileName = \"/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/tdi/src/Component/LeNombreATrouver.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addScore, delScore } from \"../redux/actions\";\nexport class LeNombreATrouver extends React.Component {\n  constructor(props) {\n    super(props);\n    this.compteur = 0; //les states sont les seuls éléments destiné a changer graphiquement\n\n    this.state = {\n      nbRand: this.generateRand(),\n      content: \"\",\n      name: \"\"\n    };\n  }\n\n  setName(event) {\n    event.preventDefault();\n    this.setState({ ...this.state,\n      name: this.props.name(event.target[0].value)\n    });\n  }\n\n  addScore() {\n    this.props.addScore({\n      name: this.state.name,\n      nbTry: this.compteur,\n      nbToFind: this.state.nbRand\n    });\n    console.log(\"ajouté au score\");\n  }\n\n  delScore(index) {\n    console.log(this);\n    this.props.delScore(index);\n  }\n\n  number(event) {\n    event.preventDefault();\n    let nbGiven = parseInt(event.target[0].value);\n\n    if (nbGiven === this.state.nbRand) {\n      this.compteur++;\n      console.log(\"find: \" + this.compteur);\n      this.setState({ ...this.state,\n        content: \"vous avez trouvé aprés \" + this.compteur + \" essai\"\n      });\n      this.restart();\n    } else if (nbGiven > this.state.nbRand) {\n      this.compteur++;\n      console.log(\"en dessous\" + this.compteur);\n      this.setState({ ...this.state,\n        content: \"vous avez fait \" + this.compteur + \" essai\"\n      });\n    } else if (nbGiven < this.state.nbRand) {\n      this.compteur++;\n      console.log(\"au dessus\");\n      this.setState({ ...this.state,\n        content: \"vous avez fait \" + this.compteur + \" essai\"\n      });\n    }\n  }\n\n  generateRand() {\n    let nb = Math.round(Math.random() * 101);\n    console.log(nb);\n    return nb;\n  }\n\n  lose() {\n    console.log(\"perdu\");\n    this.restart();\n  }\n\n  restart() {\n    this.addScore(); //save dans database avec -1\n\n    this.setState({ ...this.state,\n      nbRand: this.generateRand()\n    });\n    this.compteur = 0;\n    this.setState({ ...this.state,\n      content: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"nombre a trouver\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"vous devez trouver le nombre entre 1 et 100\"), React.createElement(\"form\", {\n      onSubmit: event => this.number(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, \"proposition : \", React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"valider\"), React.createElement(\"button\", {\n      onClick: () => this.lose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"recommencer\"), \"/\", React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, this.state.content)), React.createElement(\"table\", {\n      className: \"style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \" \", React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"Nom\"), \" \", React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"score\"), \" \", React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, \"nb a trouver\"), \" \")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, scores.map((student, index) => {\n      if (index === selectId) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 99\n          },\n          __self: this\n        }, React.createElement(\"form\", {\n          onSubmit: event => this.editStudent(event, index),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100\n          },\n          __self: this\n        }, React.createElement(\"table\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"tbody\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"text\",\n          defaultValue: student.name,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 103\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          defaultValue: student.age,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"label\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        }, React.createElement(\"input\", {\n          type: \"number\",\n          defaultValue: student.group,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109\n          },\n          __self: this\n        }))), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        }, \"Edit\"))))))));\n      }\n\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, student.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, student.age), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, student.group), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.selectId(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Edit\"), React.createElement(\"button\", {\n        onClick: () => this.delStudent(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }, \"Delete\")));\n    })))); //fonction fléché renvoie au parent (le bouton n'a pas de fonction lose)\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addScore: score => {\n      dispatch(addScore(score));\n    },\n\n    /*editStudent: datas => {\n        dispatch(editStudent(datas))\n    },*/\n    delScore: index => {\n      dispatch(delScore(index));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LeNombreATrouver));","map":{"version":3,"sources":["/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/tdi/src/Component/LeNombreATrouver.js"],"names":["React","withRouter","connect","addScore","delScore","LeNombreATrouver","Component","constructor","props","compteur","state","nbRand","generateRand","content","name","setName","event","preventDefault","setState","target","value","nbTry","nbToFind","console","log","index","number","nbGiven","parseInt","restart","nb","Math","round","random","lose","render","scores","map","student","selectId","editStudent","age","group","delStudent","mapStateToProps","mapDispatchToProps","dispatch","score"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addScore, delScore } from \"../redux/actions\";\n\nexport class LeNombreATrouver extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.compteur = 0;\n\n        //les states sont les seuls éléments destiné a changer graphiquement\n        this.state= {\n            nbRand : this.generateRand(),\n            content : \"\",\n            name : \"\"\n        };\n    }\n\n    setName(event) {\n        event.preventDefault();\n        this.setState({...this.state, name : this.props.name(event.target[0].value)});\n    }\n\n\n    addScore(){\n        this.props.addScore({\n            name : this.state.name,\n            nbTry : this.compteur,\n            nbToFind : this.state.nbRand\n        });\n        console.log(\"ajouté au score\");\n    }\n\n    delScore(index) {\n        console.log(this);\n        this.props.delScore(index);\n    }\n\n\n    number(event) {\n        event.preventDefault();\n        let nbGiven = parseInt(event.target[0].value);\n\n        if (nbGiven === this.state.nbRand) {\n            this.compteur ++;\n            console.log(\"find: \" + this.compteur);\n            this.setState({...this.state, content : \"vous avez trouvé aprés \" + this.compteur + \" essai\"});\n            this.restart();\n        } else if (nbGiven > this.state.nbRand) {\n            this.compteur ++;\n            console.log(\"en dessous\" + this.compteur);\n            this.setState({...this.state, content : \"vous avez fait \" + this.compteur + \" essai\"});\n        } else if (nbGiven < this.state.nbRand) {\n            this.compteur ++;\n            console.log(\"au dessus\");\n            this.setState({...this.state, content : \"vous avez fait \" + this.compteur + \" essai\"});\n        }\n    }\n\n    generateRand(){\n        let nb = Math.round(Math.random()*(101));\n        console.log(nb);\n        return nb;\n    }\n\n    lose(){\n        console.log(\"perdu\");\n        this.restart();\n    }\n\n    restart(){\n        this.addScore();\n        //save dans database avec -1\n\n        this.setState({...this.state, nbRand : this.generateRand()});\n        this.compteur=0;\n        this.setState({...this.state, content : \"\"});\n    }\n\n    render(){\n        return (\n            <div>\n            <h2>nombre a trouver</h2>\n            <p>vous devez trouver le nombre entre 1 et 100</p>\n            <form onSubmit={ event => this.number(event) }>\n                <label>\n                 proposition : <input type=\"text\" />\n                </label>\n                <button>valider</button>\n                <button onClick={() => this.lose()}>recommencer</button>/\n                <p>{this.state.content}</p>\n            </form>\n\n                <table className=\"style\"> <thead><tr><th>Nom</th> <th>score</th> <th>nb a trouver</th> </tr></thead><tbody>\n                {scores.map((student , index) => {\n                    if (index === selectId) {\n                        return (\n                            <tr key={index}><td colSpan=\"4\">\n                                <form onSubmit={ event => this.editStudent(event, index) }>\n                                    <table><tbody><tr>\n                                        <td><label>\n                                            <input type=\"text\" defaultValue={student.name} />\n                                        </label></td>\n                                        <td><label>\n                                            <input type=\"number\" defaultValue={student.age} />\n                                        </label></td>\n                                        <td><label>\n                                            <input type=\"number\" defaultValue={student.group} />\n                                        </label></td>\n                                        <td><button>Edit</button></td>\n                                    </tr></tbody></table>\n                                </form>\n                            </td></tr>\n                        );\n                    }\n                    return (\n                        <tr key={index}>\n                            <td>{student.name}</td>\n                            <td>{student.age}</td>\n                            <td>{student.group}</td>\n                            <td>\n                                <button onClick={() => this.selectId(index)}>Edit</button>\n                                <button onClick={() => this.delStudent(index)}>Delete</button>\n                            </td>\n                        </tr>\n                    );\n                })}\n                </tbody></table>\n\n            </div>\n    );\n        //fonction fléché renvoie au parent (le bouton n'a pas de fonction lose)\n    }\n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        scores: state.scores\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addScore: score => {\n            dispatch(addScore(score))\n        },\n        /*editStudent: datas => {\n            dispatch(editStudent(datas))\n        },*/\n        delScore: index => {\n            dispatch(delScore(index))\n        }\n    };\n};\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LeNombreATrouver));\n"]},"metadata":{},"sourceType":"module"}