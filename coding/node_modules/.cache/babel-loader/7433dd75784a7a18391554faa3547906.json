{"ast":null,"code":"import { ADD_USER, DEL_USER, ADD_FAVORITE, DEL_FAVORITE } from './actions';\nimport favorite from \"../Component/Favorite\";\nconst initialState = {\n  /**\n   * Players scores [{Object}]\n   *\n   * @param      {String}  {firstName}\n   * @param      {String}  {lastName}\n   * @param      {String}  {birthDate}\n   * @param      {String}  {bio}\n   * @param      {String}  {city}\n   * @param       {Array}  {favoriteGamesName}\n   */\n  users: [],\n\n  /**\n   * @param   {String}    {name}\n   */\n  favoritesGame: []\n};\n\nconst arrayHasIndex = (array, index) => Array.isArray(array) && array.hasOwnProperty(index);\n/*\nexport function reducerFavorite( initialState, action){\n    let nextState\n    switch (action.type) {\n        case ADD_FAVORITE :\n            nextState = {...state, name : action.gameName};\n\n    }\n}*/\n\n\nexport default function reducers(state = initialState, action) {\n  console.log('reducers', action.type);\n  let nextState;\n\n  switch (action.type) {\n    case ADD_USER:\n      let table = [...state.users, action.user];\n      return { ...state,\n        users: table\n      };\n\n    case DEL_USER:\n      if (arrayHasIndex(state.users, action.index)) {\n        return { ...state,\n          users: [...state.users.filter((user, index) => index !== action.index)]\n        };\n      }\n\n      return state;\n\n    case ADD_FAVORITE:\n      /*\n      let t = [...state.favorites];\n      console.log(action.gameName + \"     -   \" + action.gameName)\n       if(t.includes(action.gameName)){\n          nextState = t\n          console.log(\"contient deja:  \" + action.gameName)\n      }\n      else {\n          nextState = {\n              ...state, favorites : [...state.favorites, action.gameName]\n          }\n          console.log(\"nopp:  \" + action.gameName)\n      }\n      console.log(nextState);\n      return nextState || state;*/\n      console.log(action.gameName);\n      const favIndex = state.favoritesGame.findIndex(item => item.id === action.gameName.id);\n\n      if (favIndex === -1) {\n        nextState = { ...state,\n          favoritesGame: state.favoritesGame.filter((item, index) => index !== favIndex)\n        };\n      } else {\n        nextState = { ...state,\n          favoritesGame: [...state.favoritesGame, action.gameName]\n        };\n      }\n\n      console.log(\"reducer addFav : \" + nextState + \"    -\" + action.gameName);\n      console.log(nextState);\n      return nextState || state;\n\n    /*\n    let t = [...state.favorites];\n    if (t.includes(action.gameName)){\n        console.log(\"contient deja \")\n    }\n    else {\n        console.log(\"ne contient pas\")\n    }\n    console.log(t);\n    let tableGame = [ ...state.favorites, action.gameName ];\n    console.log(tableGame)\n    return { ...state, favorites: tableGame};*/\n\n    /*\n    let tableGame = [ ...state.users,  action.gameName];\n    console.log(action.gameName);\n    console.log(tableGame);\n    return { ...state.users, favoriteGamesName : tableGame};*/\n\n    case DEL_FAVORITE:\n      if (arrayHasIndex(state.users, action.index)) {\n        return { ...state,\n          users: [...state.users.filter((user, index) => index !== action.index)]\n        };\n      }\n\n      return state;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/coding/src/redux/reducers.js"],"names":["ADD_USER","DEL_USER","ADD_FAVORITE","DEL_FAVORITE","favorite","initialState","users","favoritesGame","arrayHasIndex","array","index","Array","isArray","hasOwnProperty","reducers","state","action","console","log","type","nextState","table","user","filter","gameName","favIndex","findIndex","item","id"],"mappings":"AAAA,SACIA,QADJ,EAEIC,QAFJ,EAGIC,YAHJ,EAIIC,YAJJ,QAKO,WALP;AAMA,OAAOC,QAAP,MAAqB,uBAArB;AAEA,MAAMC,YAAY,GAAG;AACjB;;;;;;;;;;AAUAC,EAAAA,KAAK,EAAE,EAXU;;AAajB;;;AAGAC,EAAAA,aAAa,EAAG;AAhBC,CAArB;;AAqBA,MAAMC,aAAa,GAAG,CAACC,KAAD,EAAQC,KAAR,KAAkBC,KAAK,CAACC,OAAN,CAAcH,KAAd,KAAwBA,KAAK,CAACI,cAAN,CAAqBH,KAArB,CAAhE;AAEA;;;;;;;;;;;AAUA,eAAe,SAASI,QAAT,CAAkBC,KAAK,GAAGV,YAA1B,EAAwCW,MAAxC,EAAgD;AAC3DC,EAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBF,MAAM,CAACG,IAA/B;AACA,MAAIC,SAAJ;;AACA,UAAQJ,MAAM,CAACG,IAAf;AAEI,SAAKnB,QAAL;AACI,UAAIqB,KAAK,GAAG,CAAE,GAAGN,KAAK,CAACT,KAAX,EAAkBU,MAAM,CAACM,IAAzB,CAAZ;AACA,aAAO,EAAE,GAAGP,KAAL;AAAYT,QAAAA,KAAK,EAAEe;AAAnB,OAAP;;AAGJ,SAAKpB,QAAL;AACI,UAAIO,aAAa,CAACO,KAAK,CAACT,KAAP,EAAcU,MAAM,CAACN,KAArB,CAAjB,EAA8C;AAC1C,eAAO,EAAE,GAAGK,KAAL;AAAYT,UAAAA,KAAK,EAAE,CAAE,GAAGS,KAAK,CAACT,KAAN,CAAYiB,MAAZ,CAAmB,CAACD,IAAD,EAAOZ,KAAP,KAAiBA,KAAK,KAAKM,MAAM,CAACN,KAArD,CAAL;AAAnB,SAAP;AACH;;AACD,aAAOK,KAAP;;AAKJ,SAAKb,YAAL;AACI;;;;;;;;;;;;;;;AAgBAe,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACQ,QAAnB;AAEA,YAAMC,QAAQ,GAAGV,KAAK,CAACR,aAAN,CAAoBmB,SAApB,CAA8BC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYZ,MAAM,CAACQ,QAAP,CAAgBI,EAAlE,CAAjB;;AACA,UAAGH,QAAQ,KAAK,CAAC,CAAjB,EAAmB;AACfL,QAAAA,SAAS,GAAG,EACR,GAAGL,KADK;AACER,UAAAA,aAAa,EAAGQ,KAAK,CAACR,aAAN,CAAoBgB,MAApB,CAA4B,CAACI,IAAD,EAAOjB,KAAP,KAAiBA,KAAK,KAAKe,QAAvD;AADlB,SAAZ;AAGH,OAJD,MAKK;AACDL,QAAAA,SAAS,GAAG,EACR,GAAGL,KADK;AACER,UAAAA,aAAa,EAAG,CAAC,GAAGQ,KAAK,CAACR,aAAV,EAA0BS,MAAM,CAACQ,QAAjC;AADlB,SAAZ;AAGH;;AACDP,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBE,SAAtB,GAAkC,OAAlC,GAA4CJ,MAAM,CAACQ,QAA/D;AACAP,MAAAA,OAAO,CAACC,GAAR,CAAYE,SAAZ;AACA,aAAOA,SAAS,IAAIL,KAApB;;AAGA;;;;;;;;;;;;;AAiBA;;;;;;AAOJ,SAAKZ,YAAL;AACI,UAAIK,aAAa,CAACO,KAAK,CAACT,KAAP,EAAcU,MAAM,CAACN,KAArB,CAAjB,EAA8C;AAC1C,eAAO,EAAE,GAAGK,KAAL;AAAYT,UAAAA,KAAK,EAAE,CAAE,GAAGS,KAAK,CAACT,KAAN,CAAYiB,MAAZ,CAAmB,CAACD,IAAD,EAAOZ,KAAP,KAAiBA,KAAK,KAAKM,MAAM,CAACN,KAArD,CAAL;AAAnB,SAAP;AACH;;AACD,aAAOK,KAAP;;AAEJ;AACI,aAAOA,KAAP;AAlFR;AAoFH","sourcesContent":["import {\n    ADD_USER,\n    DEL_USER,\n    ADD_FAVORITE,\n    DEL_FAVORITE\n} from './actions'\nimport favorite from \"../Component/Favorite\";\n\nconst initialState = {\n    /**\n     * Players scores [{Object}]\n     *\n     * @param      {String}  {firstName}\n     * @param      {String}  {lastName}\n     * @param      {String}  {birthDate}\n     * @param      {String}  {bio}\n     * @param      {String}  {city}\n     * @param       {Array}  {favoriteGamesName}\n     */\n    users: [],\n\n    /**\n     * @param   {String}    {name}\n     */\n    favoritesGame : []\n};\n\n\n\nconst arrayHasIndex = (array, index) => Array.isArray(array) && array.hasOwnProperty(index);\n\n/*\nexport function reducerFavorite( initialState, action){\n    let nextState\n    switch (action.type) {\n        case ADD_FAVORITE :\n            nextState = {...state, name : action.gameName};\n\n    }\n}*/\n\nexport default function reducers(state = initialState, action) {\n    console.log('reducers', action.type);\n    let nextState;\n    switch (action.type) {\n\n        case ADD_USER:\n            let table = [ ...state.users, action.user ];\n            return { ...state, users: table};\n\n\n        case DEL_USER:\n            if (arrayHasIndex(state.users, action.index)) {\n                return { ...state, users: [ ...state.users.filter((user, index) => index !== action.index) ] };\n            }\n            return state;\n\n\n\n\n        case ADD_FAVORITE:\n            /*\n            let t = [...state.favorites];\n            console.log(action.gameName + \"     -   \" + action.gameName)\n\n            if(t.includes(action.gameName)){\n                nextState = t\n                console.log(\"contient deja:  \" + action.gameName)\n            }\n            else {\n                nextState = {\n                    ...state, favorites : [...state.favorites, action.gameName]\n                }\n                console.log(\"nopp:  \" + action.gameName)\n            }\n            console.log(nextState);\n            return nextState || state;*/\n            console.log(action.gameName)\n\n            const favIndex = state.favoritesGame.findIndex(item => item.id === action.gameName.id);\n            if(favIndex === -1){\n                nextState = {\n                    ...state, favoritesGame : state.favoritesGame.filter( (item, index) => index !== favIndex)\n                }\n            }\n            else {\n                nextState = {\n                    ...state, favoritesGame : [...state.favoritesGame,  action.gameName]\n                }\n            }\n            console.log(\"reducer addFav : \" + nextState + \"    -\" + action.gameName);\n            console.log(nextState)\n            return nextState || state;\n\n\n            /*\n            let t = [...state.favorites];\n            if (t.includes(action.gameName)){\n                console.log(\"contient deja \")\n            }\n            else {\n                console.log(\"ne contient pas\")\n            }\n            console.log(t);\n            let tableGame = [ ...state.favorites, action.gameName ];\n            console.log(tableGame)\n            return { ...state, favorites: tableGame};*/\n\n\n\n\n\n            /*\n            let tableGame = [ ...state.users,  action.gameName];\n            console.log(action.gameName);\n            console.log(tableGame);\n            return { ...state.users, favoriteGamesName : tableGame};*/\n\n\n        case DEL_FAVORITE :\n            if (arrayHasIndex(state.users, action.index)) {\n                return { ...state, users: [ ...state.users.filter((user, index) => index !== action.index) ] };\n            }\n            return state;\n\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}