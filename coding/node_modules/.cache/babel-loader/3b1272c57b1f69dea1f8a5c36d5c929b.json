{"ast":null,"code":"var _jsxFileName = \"/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/coding/src/Component/Search.js\";\nimport React from 'react';\nimport DarkSoul3 from \"../pictures/dark_souls_3.jpg\";\nimport Dbz from \"../pictures/dbz_kakarot.jpg\";\nimport MonsterHunter from \"../pictures/MH_world.jpg\";\nimport PokemonEpee from \"../pictures/pokemon_epee.jpg\";\nimport ResidentEvil from \"../pictures/resident_evil_3.jpg\";\nimport Skyrim from \"../pictures/skyrim.jpg\";\nimport Witcher3 from \"../pictures/witcher 3.jpg\";\nimport ZeldaBOTW from \"../pictures/zelda_BOTW.jpg\";\nimport Hearth from \"../pictures/hearth.png\";\nimport EmptyHearth from \"../pictures/hearth_empty.png\";\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addFavorite, delFavorite } from \"../redux/actions\";\nexport class Search extends React.Component {\n  constructor(props) {\n    super(props);\n    let tableGames = [{\n      name: \"Darksouls 3\",\n      cover: DarkSoul3,\n      description: \"Développé par From Software, Dark Souls 3 est un action RPG particulièrement exigeant. \" + \"L'environnement, très peu accueillant, ravira les amateurs de challenges corsés. \" + \"Vous y combattrez de gigantesques ennemis, qui ne feront qu'une bouchée de vous.\",\n      genre: \"Action | Action RPG | Dungeon RPG\",\n      date: \"12 avril 2016\"\n    }, {\n      name: \"Dragon Ball Z Kakarot\",\n      cover: Dbz,\n      description: \"Dragon Ball Z Kakarot permet de revivre l'histoire de Dragon Ball Z dans le peau de Kakarot / Goku. \" + \"Développé par CyberConnect2, le jeu reproduira les moments emblématiques de l'oeuvre originale. \" + \"Il sera possible de voler dans un monde vaste que vous débloquerez en progressant dans l'aventure, \" + \"de croiser des ennemis, d'accepter des quêtes, mais aussi de pêcher et de voler.\",\n      genre: \"Action RPG\",\n      date: \"17 janvier 2020\"\n    }, {\n      name: \"Monster Hunter World\",\n      cover: MonsterHunter,\n      description: \"La dernière entrée de la série Monster Hunter. \" + \"Plus complet que jamais, le jeu transporte le joueur au travers de batailles contre \" + \"de terribles monstres et de magnifiques paysages. Récupérerez des objets sur vos ennemis, \" + \"créez de nouveaux équipements et armures, explorez tous les territoires disponibles. \" + \"Saurez vous devenir le chasseur ultime ?\",\n      genre: \"Action | RPG | Action RPG\",\n      date: \"26 janvier 2018\"\n    }, {\n      name: \"Pokemon épée\",\n      cover: PokemonEpee,\n      description: \"Pokémon Épée / Bouclier est le nouvel épisode de la série Pokémon, exclusif \" + \"à la console de salon de Nintendo. Le jeu prend place dans la nouvelle région de Galar \" + \"et donne accès à trois nouveaux Pokémons de départ : Ouistempo (plante), Flambino (feu) et Larméléon (eau).\",\n      genre: \"RPG\",\n      date: \"15 novembre 2019\"\n    }, {\n      name: \"Resident Evil 3\",\n      cover: ResidentEvil,\n      description: \"Resident Evil 3 (2020) est un jeu développé et édité par Capcom. \" + \"C'est une version remise au goût du jour de Resident Evil 3, \" + \"sorti initialement sur Playstation en 1999. Le joueur incarne Jill, \" + \"une femme devant quitter Racoon City et les infectés qui habitent la ville.\",\n      genre: \"Survival-Horror\",\n      date: \"03 avril 2020\"\n    }, {\n      name: \"The Elder Scrolls V : Skyrim\",\n      cover: Skyrim,\n      description: \"The Elder Scrolls V : Skyrim est le cinquième épisode de la saga de jeux de rôle du même nom. \" + \"Le scénario se passe 200 ans après l'histoire du quatrième opus, \" + \"quand Alduin fait son retour au milieu d'une guerre civile. \" + \"Seul le Dovahkiin, incarné par le joueur, peut mettre un terme à cette sombre affaire... \" + \"Un monde gigantesque empli de quêtes est à explorer et auquel se sont rajoutées \" + \"des extensions débloquant plus de quêtes.\",\n      genre: \"Heroic Fantasy | Dragons\",\n      date: \"11 novembre 2011\"\n    }, {\n      name: \"The Witcher 3 : Wild Hunt\",\n      cover: Witcher3,\n      description: \"The Witcher 3 : Wild Hunt est un Action-RPG se déroulant dans un monde ouvert. \" + \"Troisième épisode de la série du même nom, inspirée des livres du polonais Andrzej Sapkowski, \" + \"cet opus relate la fin de l'histoire de Geralt de Riv.\",\n      genre: \"Fantastique | Heroic Fantasy\",\n      date: \"19 mai 2015\"\n    }, {\n      name: \"The Legend Of Zelda : Breath Of The Wild\",\n      cover: ZeldaBOTW,\n      description: \"The Legend of Zelda : Breath of the Wild est un jeu d'action/aventure. \" + \"Link se réveille d'un sommeil de 100 ans dans un royaume d'Hyrule dévasté. \" + \"Il lui faudra percer les mystères du passé et vaincre Ganon, le fléau. \" + \"L'aventure prend place dans un gigantesque monde ouvert et \" + \"accorde ainsi une part importante à l'exploration. \" + \"Le titre a été pensé pour que le joueur puisse aller où il veut dès le début, \" + \"s'éloignant de la linéarité habituelle de la série.\",\n      genre: \"Action | Aventure | RPG\",\n      date: \"03 mars 2017\"\n    }];\n    let tableName = [];\n\n    for (let i = 0; i < tableGames.length; i++) {\n      tableName.push(tableGames[i].name);\n    }\n\n    this.state = {\n      table: tableGames,\n      list: tableName,\n      props: this.props\n    };\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n  removeItem(item) {\n    // Put our list into an array\n    const list = this.state.table.slice(); // Check to see if item passed in matches item in array\n\n    list.some((el, i) => {\n      if (el === item.name) {\n        // If item matches, remove it from array\n        list.splice(i, 1);\n        return true;\n      }\n    }); // Set state to list\n\n    this.setState({\n      table: list\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, React.createElement(\"section\", {\n      className: \"section\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(List, {\n      items: this.state.table,\n      delete: this.removeItem,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nclass List extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filtered: [],\n      favoritesGame: []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.setState({\n      filtered: this.props.items\n    });\n  }\n\n  componentWillReceiveProps(nextProps) {\n    this.setState({\n      filtered: nextProps.items\n    });\n  }\n\n  handleChange(e) {\n    // Variable to hold the original version of the list\n    let currentList = []; // Variable to hold the filtered list before putting into state\n\n    let newList = []; // If the search bar isn't empty\n\n    if (e.target.value !== \"\") {\n      // Assign the original list to currentList\n      currentList = this.props.items; // Use .filter() to determine which items should be displayed\n      // based on the search terms\n\n      newList = currentList.filter(item => {\n        // change current item to lowercase\n        const lc = item.name.toLowerCase(); // change search term to lowercase\n\n        const filter = e.target.value.toLowerCase(); // check to see if the current list item includes the search term\n        // If it does, it will be added to newList. Using lowercase eliminates\n        // issues with capitalization in search terms and search content\n\n        return lc.includes(filter);\n      });\n    } else {\n      // If the search bar is empty, set newList to original task list\n      newList = this.props.items;\n    } // Set the filtered state based on what our rules added to newList\n\n\n    this.setState({\n      filtered: newList\n    });\n  }\n\n  addToFavorite(gameName) {\n    console.log(gameName);\n    this.props.addFavorite(gameName);\n  }\n\n  delToFavorite(gameName) {\n    this.props.delFavorite(gameName);\n  }\n\n  render() {\n    const {\n      favoritesGame\n    } = this.props;\n    console.log(favoritesGame);\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      type: \"text\",\n      className: \"input\",\n      onChange: this.handleChange,\n      placeholder: \"Search...\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }), this.state.filtered.map((game, i) => {\n      if (game.name !== \"\") {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"gameDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: game.cover,\n          className: \"gameImg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"gameTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 229\n          },\n          __self: this\n        }, game.name), React.createElement(\"img\", {\n          src: Hearth,\n          id: i,\n          className: \"pictureFavorite\",\n          onClick: () => this.addToFavorite(game.name.toString()),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 235\n          },\n          __self: this\n        }, game.description), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, \"genre : \", game.genre), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239\n          },\n          __self: this\n        }, \"date de sortie : \", game.date)));\n      } else {\n        return React.createElement(\"div\", {\n          key: i,\n          className: \"gameDiv\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(\"img\", {\n          src: game.cover,\n          className: \"gameImg\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }), React.createElement(\"div\", {\n          className: \"description\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"gameTitle\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 255\n          },\n          __self: this\n        }, game.name), React.createElement(\"img\", {\n          src: EmptyHearth,\n          id: i,\n          className: \"pictureFavorite\",\n          onClick: () => this.addToFavorite(game.name.toString()),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, game.description), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"genre : \", game.genre), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, \"date de sortie : \", game.date)));\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    favoritesGame: state.favoritesGame\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addFavorite: gameName => {\n      dispatch(addFavorite(gameName));\n    },\n    delFavorite: gameName => {\n      dispatch(delFavorite(gameName));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Search));","map":{"version":3,"sources":["/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/coding/src/Component/Search.js"],"names":["React","DarkSoul3","Dbz","MonsterHunter","PokemonEpee","ResidentEvil","Skyrim","Witcher3","ZeldaBOTW","Hearth","EmptyHearth","withRouter","connect","addFavorite","delFavorite","Search","Component","constructor","props","tableGames","name","cover","description","genre","date","tableName","i","length","push","state","table","list","removeItem","bind","item","slice","some","el","splice","setState","render","List","filtered","favoritesGame","handleChange","componentDidMount","items","componentWillReceiveProps","nextProps","e","currentList","newList","target","value","filter","lc","toLowerCase","includes","addToFavorite","gameName","console","log","delToFavorite","map","game","toString","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport DarkSoul3 from \"../pictures/dark_souls_3.jpg\";\nimport Dbz from \"../pictures/dbz_kakarot.jpg\";\nimport MonsterHunter from \"../pictures/MH_world.jpg\";\nimport PokemonEpee from \"../pictures/pokemon_epee.jpg\";\nimport ResidentEvil from \"../pictures/resident_evil_3.jpg\";\nimport Skyrim from \"../pictures/skyrim.jpg\";\nimport Witcher3 from \"../pictures/witcher 3.jpg\";\nimport ZeldaBOTW from \"../pictures/zelda_BOTW.jpg\";\nimport Hearth from \"../pictures/hearth.png\";\nimport EmptyHearth from \"../pictures/hearth_empty.png\";\n\nimport {withRouter} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport {addFavorite, delFavorite} from \"../redux/actions\";\n\n\nexport class Search extends React.Component {\n  constructor(props) {\n    super(props);\n\n      let tableGames = [\n          {\n              name: \"Darksouls 3\", cover: DarkSoul3,\n              description: \"Développé par From Software, Dark Souls 3 est un action RPG particulièrement exigeant. \" +\n                  \"L'environnement, très peu accueillant, ravira les amateurs de challenges corsés. \" +\n                  \"Vous y combattrez de gigantesques ennemis, qui ne feront qu'une bouchée de vous.\",\n              genre: \"Action | Action RPG | Dungeon RPG\", date: \"12 avril 2016\"\n          },\n          {\n              name: \"Dragon Ball Z Kakarot\", cover: Dbz,\n              description: \"Dragon Ball Z Kakarot permet de revivre l'histoire de Dragon Ball Z dans le peau de Kakarot / Goku. \" +\n                  \"Développé par CyberConnect2, le jeu reproduira les moments emblématiques de l'oeuvre originale. \" +\n                  \"Il sera possible de voler dans un monde vaste que vous débloquerez en progressant dans l'aventure, \" +\n                  \"de croiser des ennemis, d'accepter des quêtes, mais aussi de pêcher et de voler.\",\n              genre: \"Action RPG\", date: \"17 janvier 2020\"\n          },\n          {\n              name: \"Monster Hunter World\", cover: MonsterHunter,\n              description: \"La dernière entrée de la série Monster Hunter. \" +\n                  \"Plus complet que jamais, le jeu transporte le joueur au travers de batailles contre \" +\n                  \"de terribles monstres et de magnifiques paysages. Récupérerez des objets sur vos ennemis, \" +\n                  \"créez de nouveaux équipements et armures, explorez tous les territoires disponibles. \" +\n                  \"Saurez vous devenir le chasseur ultime ?\",\n              genre: \"Action | RPG | Action RPG\", date: \"26 janvier 2018\"\n          },\n          {\n              name: \"Pokemon épée\",  cover: PokemonEpee,\n              description: \"Pokémon Épée / Bouclier est le nouvel épisode de la série Pokémon, exclusif \" +\n                  \"à la console de salon de Nintendo. Le jeu prend place dans la nouvelle région de Galar \" +\n                  \"et donne accès à trois nouveaux Pokémons de départ : Ouistempo (plante), Flambino (feu) et Larméléon (eau).\",\n              genre: \"RPG\", date: \"15 novembre 2019\"\n          },\n          {\n              name: \"Resident Evil 3\", cover: ResidentEvil,\n              description: \"Resident Evil 3 (2020) est un jeu développé et édité par Capcom. \" +\n                  \"C'est une version remise au goût du jour de Resident Evil 3, \" +\n                  \"sorti initialement sur Playstation en 1999. Le joueur incarne Jill, \" +\n                  \"une femme devant quitter Racoon City et les infectés qui habitent la ville.\",\n              genre: \"Survival-Horror\", date: \"03 avril 2020\"\n          },\n          {\n              name: \"The Elder Scrolls V : Skyrim\",  cover: Skyrim,\n              description: \"The Elder Scrolls V : Skyrim est le cinquième épisode de la saga de jeux de rôle du même nom. \" +\n                  \"Le scénario se passe 200 ans après l'histoire du quatrième opus, \" +\n                  \"quand Alduin fait son retour au milieu d'une guerre civile. \" +\n                  \"Seul le Dovahkiin, incarné par le joueur, peut mettre un terme à cette sombre affaire... \" +\n                  \"Un monde gigantesque empli de quêtes est à explorer et auquel se sont rajoutées \" +\n                  \"des extensions débloquant plus de quêtes.\",\n              genre: \"Heroic Fantasy | Dragons\", date: \"11 novembre 2011\"\n          },\n          {\n              name: \"The Witcher 3 : Wild Hunt\",  cover: Witcher3,\n              description: \"The Witcher 3 : Wild Hunt est un Action-RPG se déroulant dans un monde ouvert. \" +\n                  \"Troisième épisode de la série du même nom, inspirée des livres du polonais Andrzej Sapkowski, \" +\n                  \"cet opus relate la fin de l'histoire de Geralt de Riv.\",\n              genre: \"Fantastique | Heroic Fantasy\", date: \"19 mai 2015\"\n          },\n          {\n              name: \"The Legend Of Zelda : Breath Of The Wild\",  cover: ZeldaBOTW,\n              description: \"The Legend of Zelda : Breath of the Wild est un jeu d'action/aventure. \" +\n                  \"Link se réveille d'un sommeil de 100 ans dans un royaume d'Hyrule dévasté. \" +\n                  \"Il lui faudra percer les mystères du passé et vaincre Ganon, le fléau. \" +\n                  \"L'aventure prend place dans un gigantesque monde ouvert et \" +\n                  \"accorde ainsi une part importante à l'exploration. \" +\n                  \"Le titre a été pensé pour que le joueur puisse aller où il veut dès le début, \" +\n                  \"s'éloignant de la linéarité habituelle de la série.\",\n              genre: \"Action | Aventure | RPG\", date: \"03 mars 2017\"\n          },\n      ];\n      let tableName = [];\n      for (let i=0; i<tableGames.length; i++){\n          tableName.push(tableGames[i].name);\n      }\n\n    this.state = {\n          table : tableGames,\n        list: tableName,\n        props :this.props\n    };\n\n    this.removeItem = this.removeItem.bind(this);\n  }\n\n\n\n  removeItem(item) {\n    // Put our list into an array\n    const list = this.state.table.slice();\n    // Check to see if item passed in matches item in array\n    list.some((el, i) => {\n      if (el === item.name) {\n        // If item matches, remove it from array\n        list.splice(i, 1);\n        return true;\n      }\n    });\n    // Set state to list\n    this.setState({\n      table: list\n    });\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <div className=\"container\">\n          <section className=\"section\">\n                        <List items={this.state.table} delete={this.removeItem} />\n          </section>\n        </div>\n      </div>\n    );\n  }\n}\n\n\n\n\n\n\n\n\n\n\nclass List extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            filtered: [],\n            favoritesGame : []\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentDidMount() {\n        this.setState({\n            filtered: this.props.items\n        });\n    }\n\n    componentWillReceiveProps(nextProps) {\n        this.setState({\n            filtered: nextProps.items\n        });\n    }\n\n    handleChange(e) {\n        // Variable to hold the original version of the list\n        let currentList = [];\n        // Variable to hold the filtered list before putting into state\n        let newList = [];\n\n        // If the search bar isn't empty\n        if (e.target.value !== \"\") {\n            // Assign the original list to currentList\n            currentList = this.props.items;\n\n            // Use .filter() to determine which items should be displayed\n            // based on the search terms\n            newList = currentList.filter(item => {\n                // change current item to lowercase\n                const lc = item.name.toLowerCase();\n                // change search term to lowercase\n                const filter = e.target.value.toLowerCase();\n                // check to see if the current list item includes the search term\n                // If it does, it will be added to newList. Using lowercase eliminates\n                // issues with capitalization in search terms and search content\n                return lc.includes(filter);\n            });\n        } else {\n            // If the search bar is empty, set newList to original task list\n            newList = this.props.items;\n        }\n        // Set the filtered state based on what our rules added to newList\n        this.setState({\n            filtered: newList\n        });\n    }\n\n\n    addToFavorite(gameName){\n        console.log(gameName);\n        this.props.addFavorite(gameName);\n    }\n\n    delToFavorite(gameName){\n        this.props.delFavorite(gameName);\n    }\n\n\n\n    render() {\n        const { favoritesGame } = this.props;\n        console.log(favoritesGame)\n        return (\n            <div>\n                <input type=\"text\" className=\"input\" onChange={this.handleChange} placeholder=\"Search...\" />\n\n                        {this.state.filtered.map((game, i) =>\n                            {\n                                if (game.name!==\"\") {\n                                    return (\n\n                                        <div key={i} className=\"gameDiv\">\n                                            <img src={game.cover} className=\"gameImg\"/>\n                                            <div className=\"description\">\n                                                <div className=\"gameTitle\">\n                                                    <p>\n                                                        {game.name}\n                                                    </p>\n                                                    <img src={Hearth} id={i} className=\"pictureFavorite\"\n                                                         onClick={() => this.addToFavorite(game.name.toString())}/>\n                                                </div>\n                                                <p>{game.description}</p>\n                                                <p>\n                                                    genre : {game.genre}\n                                                </p>\n                                                <p>\n                                                    date de sortie : {game.date}\n                                                </p>\n                                            </div>\n                                        </div>\n\n                                    )\n\n                                }\n                                else {\n                                    return (\n\n                                        <div key={i} className=\"gameDiv\">\n                                            <img src={game.cover} className=\"gameImg\"/>\n                                            <div className=\"description\">\n                                                <div className=\"gameTitle\">\n                                                    <p>\n                                                        {game.name}\n                                                    </p>\n                                                    <img src={EmptyHearth} id={i} className=\"pictureFavorite\"\n                                                         onClick={() => this.addToFavorite(game.name.toString())}/>\n                                                </div>\n                                                <p>{game.description}</p>\n                                                <p>\n                                                    genre : {game.genre}\n                                                </p>\n                                                <p>\n                                                    date de sortie : {game.date}\n                                                </p>\n                                            </div>\n                                        </div>\n\n                                    )\n                                }\n                            }\n\n                        )}\n\n            </div>\n        )\n    }\n}\n\n\n\nconst mapStateToProps = state => {\n    return {\n        favoritesGame : state.favoritesGame\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addFavorite: gameName => {\n            dispatch(addFavorite(gameName))\n        },\n        delFavorite : gameName=>{\n            dispatch(delFavorite(gameName))\n        }\n    };\n};\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(Search));\n"]},"metadata":{},"sourceType":"module"}