{"ast":null,"code":"var _jsxFileName = \"/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/tdi/src/Component/LeNombreATrouver.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addScore } from \"../redux/actions\";\nimport Score from \"./Score\";\nexport class LeNombreATrouver extends React.Component {\n  constructor(props) {\n    super(props);\n    this.compteur = 0;\n    this.nbRand = this.generateRand();\n    this.scores = []; //les states sont les seuls éléments destiné a changer graphiquement\n\n    this.state = {\n      //nbRand : this.generateRand(),\n      content: \"\",\n      name: this.props.name\n    };\n  }\n\n  addScore() {\n    console.log(\"\" + this.state.name + \"  |  \" + this.compteur + \"  : \" + this.nbRand);\n    this.props.addScore({\n      name: this.state.name,\n      nbTry: this.compteur,\n      nbToFind: this.nbRand\n    });\n  }\n\n  number(event) {\n    event.preventDefault();\n    let nbGiven = parseInt(event.target[0].value);\n    console.log(\"\" + this.nbRand);\n\n    if (nbGiven === this.nbRand) {\n      this.compteur++;\n      console.log(\"find: \" + this.compteur);\n      this.setState({ ...this.state,\n        content: \"vous avez trouvé aprés \" + this.compteur + \" essai\"\n      });\n      this.restart();\n    } else if (nbGiven > this.nbRand) {\n      this.compteur++;\n      console.log(\"en dessous\" + this.compteur);\n      this.setState({ ...this.state,\n        content: \"c'est plus petit , vous avez fait \" + this.compteur + \" essai\"\n      });\n    } else if (nbGiven < this.nbRand) {\n      this.compteur++;\n      console.log(\"au dessus\");\n      this.setState({ ...this.state,\n        content: \"c'est plus grand vous avez fait \" + this.compteur + \" essai\"\n      });\n    }\n  }\n\n  generateRand() {\n    let nb = Math.floor(Math.random() * 101);\n    return nb;\n  }\n\n  lose() {\n    this.compteur = -1;\n    this.restart();\n  }\n\n  restart() {\n    this.addScore();\n    this.nbRand = this.generateRand();\n    this.compteur = 0;\n    this.setState({ ...this.state,\n      content: \"\"\n    });\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, \"nombre a trouver\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83\n      },\n      __self: this\n    }, \"vous devez trouver le nombre entre 0 et 100\"), React.createElement(\"form\", {\n      onSubmit: event => this.number(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"proposition : \", React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"valider\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, this.state.content)), React.createElement(\"button\", {\n      onClick: () => this.lose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"recommencer\"), React.createElement(Score, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93\n      },\n      __self: this\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addScore: score => {\n      dispatch(addScore(score));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LeNombreATrouver));","map":{"version":3,"sources":["/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/tdi/src/Component/LeNombreATrouver.js"],"names":["React","withRouter","connect","addScore","Score","LeNombreATrouver","Component","constructor","props","compteur","nbRand","generateRand","scores","state","content","name","console","log","nbTry","nbToFind","number","event","preventDefault","nbGiven","parseInt","target","value","setState","restart","nb","Math","floor","random","lose","render","mapStateToProps","mapDispatchToProps","dispatch","score"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {withRouter} from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addScore } from \"../redux/actions\";\n\nimport Score from \"./Score\";\n\n\nexport class LeNombreATrouver extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.compteur = 0;\n        this.nbRand = this.generateRand();\n        this.scores = [];\n\n        //les states sont les seuls éléments destiné a changer graphiquement\n        this.state= {\n            //nbRand : this.generateRand(),\n            content : \"\",\n            name : this.props.name,\n        };\n    }\n\n\n    addScore(){\n        console.log(\"\"+ this.state.name + \"  |  \" + this.compteur + \"  : \"  + this.nbRand);\n\n        this.props.addScore({\n            name : this.state.name,\n            nbTry : this.compteur,\n            nbToFind : this.nbRand\n        });\n    }\n\n\n    number(event) {\n        event.preventDefault();\n        let nbGiven = parseInt(event.target[0].value);\n        console.log(\"\"  + this.nbRand);\n        if (nbGiven === this.nbRand) {\n            this.compteur ++;\n            console.log(\"find: \" + this.compteur);\n            this.setState({...this.state, content : \"vous avez trouvé aprés \" + this.compteur + \" essai\"});\n            this.restart();\n        } else if (nbGiven > this.nbRand) {\n            this.compteur ++;\n            console.log(\"en dessous\" + this.compteur);\n            this.setState({...this.state, content : \"c'est plus petit , vous avez fait \" + this.compteur + \" essai\"});\n        } else if (nbGiven < this.nbRand) {\n            this.compteur ++;\n            console.log(\"au dessus\");\n            this.setState({...this.state, content : \"c'est plus grand vous avez fait \" + this.compteur + \" essai\"});\n        }\n    }\n\n\n    generateRand(){\n        let nb = Math.floor(Math.random()*(101));\n        return nb;\n    }\n\n\n    lose(){\n        this.compteur =-1;\n        this.restart();\n    }\n\n\n    restart(){\n        this.addScore();\n\n        this.nbRand = this.generateRand();\n        this.compteur=0;\n        this.setState({...this.state, content : \"\"});\n    }\n\n\n    render(){\n        return (\n            <div>\n                <h2>nombre a trouver</h2>\n                <p>vous devez trouver le nombre entre 0 et 100</p>\n                <form onSubmit={ event => this.number(event) }>\n                    <label>\n                        proposition : <input type=\"text\" />\n                    </label>\n                    <button>valider</button>\n\n                    <p>{this.state.content}</p>\n                </form>\n                <button onClick={() => this.lose()}>recommencer</button>\n                <Score/>\n            </div>\n        );\n    }\n}\n\n\nconst mapStateToProps = state => {\n    return {\n        scores: state.scores\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addScore: score => {\n            dispatch(addScore(score))\n        },\n    };\n};\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LeNombreATrouver));\n"]},"metadata":{},"sourceType":"module"}