{"ast":null,"code":"var _jsxFileName = \"/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/tdi/src/Component/LeNombreATrouver.js\";\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addScore, delScore } from \"../redux/actions\";\nexport class LeNombreATrouver extends React.Component {\n  constructor(props) {\n    super(props);\n    this.compteur = 0;\n    this.nbRand = this.generateRand();\n    this.scores = []; //les states sont les seuls éléments destiné a changer graphiquement\n\n    this.state = {\n      //nbRand : this.generateRand(),\n      content: \"\",\n      name: this.props.name\n    };\n  }\n\n  addScore() {\n    console.log(\"\" + this.state.name + \"  |  \" + this.compteur + \"  : \" + this.nbRand);\n    this.props.addScore({\n      name: this.state.name,\n      nbTry: this.compteur,\n      nbToFind: this.nbRand\n    });\n    const {\n      scores\n    } = this.props;\n    scores.map((score, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, score.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, score.nbTry), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, score.nbToFind), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.delScore(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, \"del\")));\n    });\n    /*\n    scores.map((score , index) => {\n        return score.nbTry;\n    }*/\n    //console.log(\"ajouté au score\");\n  }\n\n  delScore(index) {\n    console.log(this);\n    this.props.delScore(index);\n  }\n\n  number(event) {\n    event.preventDefault();\n    let nbGiven = parseInt(event.target[0].value);\n    console.log(\"\" + this.nbRand);\n\n    if (nbGiven === this.nbRand) {\n      this.compteur++;\n      console.log(\"find: \" + this.compteur);\n      this.setState({ ...this.state,\n        content: \"vous avez trouvé aprés \" + this.compteur + \" essai\"\n      });\n      this.restart();\n    } else if (nbGiven > this.nbRand) {\n      this.compteur++;\n      console.log(\"en dessous\" + this.compteur);\n      this.setState({ ...this.state,\n        content: \"c'est plus petit , vous avez fait \" + this.compteur + \" essai\"\n      });\n    } else if (nbGiven < this.nbRand) {\n      this.compteur++;\n      console.log(\"au dessus\");\n      this.setState({ ...this.state,\n        content: \"c'est plus grand vous avez fait \" + this.compteur + \" essai\"\n      });\n    }\n  }\n\n  generateRand() {\n    let nb = Math.round(Math.random() * 101);\n    console.log(nb);\n    return nb;\n  }\n\n  lose() {\n    console.log(\"perdu\");\n    this.compteur = -1;\n    this.restart();\n  }\n\n  restart() {\n    this.addScore(); //save dans database avec -1\n    //this.setState({...this.state, nbRand : this.generateRand()});\n\n    this.nbRand = this.generateRand();\n    this.compteur = 0;\n    this.setState({ ...this.state,\n      content: \"\"\n    });\n  }\n\n  render() {\n    const {\n      scores\n    } = this.props;\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"h2\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }, \"nombre a trouver\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114\n      },\n      __self: this\n    }, \"vous devez trouver le nombre entre 0 et 100\"), React.createElement(\"form\", {\n      onSubmit: event => this.number(event),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116\n      },\n      __self: this\n    }, \"proposition : \", React.createElement(\"input\", {\n      type: \"text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    })), React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"valider\"), React.createElement(\"button\", {\n      onClick: () => this.lose(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }, \"recommencer\"), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, this.state.content)), React.createElement(\"table\", {\n      className: \"style\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \" \", React.createElement(\"thead\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"tr\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"Nom\"), \" \", React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"score\"), \" \", React.createElement(\"th\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, \"nb a trouver\"), \" \")), React.createElement(\"tbody\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, scores.map((score, index) => {\n      return React.createElement(\"tr\", {\n        key: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, score.name), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, score.nbTry), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, score.nbToFind), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: () => this.delScore(index),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }, \"del\")));\n    })))); //fonction fléché renvoie au parent (le bouton n'a pas de fonction lose)\n  }\n\n}\n\nconst mapStateToProps = state => {\n  return {\n    scores: state.scores\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    addScore: score => {\n      dispatch(addScore(score));\n    },\n\n    /*editStudent: datas => {\n        dispatch(editStudent(datas))\n    },*/\n    delScore: index => {\n      dispatch(delScore(index));\n    }\n  };\n};\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LeNombreATrouver));","map":{"version":3,"sources":["/Users/Gwenael/Documents/cours/L1/fevrier_JavaPOO2_Js2/Js2/git/JS-avanc-/tdi/src/Component/LeNombreATrouver.js"],"names":["React","withRouter","connect","addScore","delScore","LeNombreATrouver","Component","constructor","props","compteur","nbRand","generateRand","scores","state","content","name","console","log","nbTry","nbToFind","map","score","index","number","event","preventDefault","nbGiven","parseInt","target","value","setState","restart","nb","Math","round","random","lose","render","mapStateToProps","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { addScore, delScore } from \"../redux/actions\";\n\nexport class LeNombreATrouver extends React.Component\n{\n    constructor(props) {\n        super(props);\n        this.compteur = 0;\n        this.nbRand = this.generateRand();\n        this.scores = [];\n\n        //les states sont les seuls éléments destiné a changer graphiquement\n        this.state= {\n            //nbRand : this.generateRand(),\n            content : \"\",\n            name : this.props.name,\n        };\n    }\n\n\n\n    addScore(){\n        console.log(\"\"+ this.state.name + \"  |  \" + this.compteur + \"  : \"  + this.nbRand);\n        this.props.addScore({\n            name : this.state.name,\n            nbTry : this.compteur,\n            nbToFind : this.nbRand\n        });\n\n\n\n        const { scores } = this.props;\n\n        scores.map((score , index) => {\n            return (\n                <tr key={index}>\n                    <td>{score.name}</td>\n                    <td>{score.nbTry}</td>\n                    <td>{score.nbToFind}</td>\n                    <td>\n                        <button onClick={() => this.delScore(index)}>del</button>\n                    </td>\n                </tr>\n            );\n        });\n        /*\n        scores.map((score , index) => {\n            return score.nbTry;\n        }*/\n\n        //console.log(\"ajouté au score\");\n    }\n\n\n    delScore(index) {\n        console.log(this);\n        this.props.delScore(index);\n    }\n\n\n    number(event) {\n        event.preventDefault();\n        let nbGiven = parseInt(event.target[0].value);\n        console.log(\"\"  + this.nbRand);\n        if (nbGiven === this.nbRand) {\n            this.compteur ++;\n            console.log(\"find: \" + this.compteur);\n            this.setState({...this.state, content : \"vous avez trouvé aprés \" + this.compteur + \" essai\"});\n            this.restart();\n        } else if (nbGiven > this.nbRand) {\n            this.compteur ++;\n            console.log(\"en dessous\" + this.compteur);\n            this.setState({...this.state, content : \"c'est plus petit , vous avez fait \" + this.compteur + \" essai\"});\n        } else if (nbGiven < this.nbRand) {\n            this.compteur ++;\n            console.log(\"au dessus\");\n            this.setState({...this.state, content : \"c'est plus grand vous avez fait \" + this.compteur + \" essai\"});\n        }\n    }\n\n    generateRand(){\n        let nb = Math.round(Math.random()*(101));\n        console.log(nb);\n        return nb;\n    }\n\n\n    lose(){\n        console.log(\"perdu\");\n        this.compteur =-1;\n        this.restart();\n    }\n\n\n    restart(){\n        this.addScore();\n        //save dans database avec -1\n\n        //this.setState({...this.state, nbRand : this.generateRand()});\n        this.nbRand = this.generateRand();\n        this.compteur=0;\n        this.setState({...this.state, content : \"\"});\n    }\n\n\n    render(){\n        const { scores } = this.props;\n\n        return (\n            <div>\n            <h2>nombre a trouver</h2>\n            <p>vous devez trouver le nombre entre 0 et 100</p>\n            <form onSubmit={ event => this.number(event) }>\n                <label>\n                 proposition : <input type=\"text\" />\n                </label>\n                <button>valider</button>\n                <button onClick={() => this.lose()}>recommencer</button>\n\n                <p>{this.state.content}</p>\n            </form>\n\n                <table className=\"style\"> <thead><tr><th>Nom</th> <th>score</th> <th>nb a trouver</th> </tr></thead>\n                <tbody>\n                {scores.map((score , index) => {\n                    return (\n                        <tr key={index}>\n                            <td>{score.name}</td>\n                            <td>{score.nbTry}</td>\n                            <td>{score.nbToFind}</td>\n                            <td>\n                                <button onClick={() => this.delScore(index)}>del</button>\n                            </td>\n                        </tr>\n                    );\n                })}\n                </tbody></table>\n\n            </div>\n    );\n        //fonction fléché renvoie au parent (le bouton n'a pas de fonction lose)\n    }\n}\n\n\n\n\nconst mapStateToProps = state => {\n    return {\n        scores: state.scores\n    };\n};\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        addScore: score => {\n            dispatch(addScore(score))\n        },\n        /*editStudent: datas => {\n            dispatch(editStudent(datas))\n        },*/\n        delScore: index => {\n            dispatch(delScore(index))\n        }\n    };\n};\n\nexport default withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(LeNombreATrouver));\n"]},"metadata":{},"sourceType":"module"}